@model Previgesst.ViewModels.EditCadenassageViewModel
@using Previgesst.Ressources
@using Previgesst.Ressources.Cadenassage




<div class="panel panel-danger">

    <div class="panel-heading back-panel-light" style="font-size:larger;font-weight:500;color:white"></div>

    <div class="panel-body">

        @*<h3>Copiez le lien du client <a href="/Registre/Index?ClientID=@Model.IdentificateurUnique">ICI</a></h3>*@
        <div id="Employes" class="tab-pane">

            @Html.AntiForgeryToken()

            @(Html.Kendo().Grid<LigneRegistreViewModel>()
            .Name("listLignesRegistre")
            .Columns(columns =>
            {
                columns.Bound(e => e.LigneRegistreId).Hidden();
                columns.Bound(e => e.NoEmploye).Title(CadRegRES.NoEmploye).Width(70);
                columns.Bound(e => e.Nom).Title(CadRegRES.Employe).Filterable(f => f.Extra(false).Operators(operators => operators
                    .ForString(str => str.Clear()
                    .Contains(GridRES.Contains)
                    .StartsWith(GridRES.StartsWith)
                    .IsEqualTo(GridRES.Egale)
                    .IsNotEqualTo(GridRES.NotEquals)
                ))).Width(105);
                columns.Bound(e => e.NoFicheCadenassage).Title(CadRegRES.Fiche).Filterable(f => f.Extra(false).Operators(operators => operators
                    .ForString(str => str.Clear()
                    .Contains(GridRES.Contains)
                    .StartsWith(GridRES.StartsWith)
                    .IsEqualTo(GridRES.Egale)
                    .IsNotEqualTo(GridRES.NotEquals)
                ))).Width(40);
                columns.Bound(e => e.NomDepartement).Title(CadRegRES.Departement).Filterable(f => f.Extra(false).Operators(operators => operators
                    .ForString(str => str.Clear()
                    .Contains(GridRES.Contains)
                    .StartsWith(GridRES.StartsWith)
                    .IsEqualTo(GridRES.Egale)
                    .IsNotEqualTo(GridRES.NotEquals)
                ))).Width(100);
                columns.Bound(e => e.NomEquipement).Title(CadRegRES.Equipement).Filterable(f => f.Extra(false).Operators(operators => operators
                    .ForString(str => str.Clear()
                    .Contains(GridRES.Contains)
                    .StartsWith(GridRES.StartsWith)
                    .IsEqualTo(GridRES.Egale)
                    .IsNotEqualTo(GridRES.NotEquals)
                ))).Width(110);
                columns.Bound(e => e.BonDeTravail).Title(CadRegRES.BonDeTravail).Width(50);
                columns.Bound(e => e.DateDebut).Format("{0:yy-MMM-dd 0:HH:mm}").Filterable(f => f.Extra(false)).Title(CadRegRES.Debut).Width(90);
                columns.Bound(e => e.FinPrevue).Format("{0:yy-MMM-dd}").Filterable(f => f.Enabled(false)).Title(CadRegRES.FinPrevueLe).Width(90);
                columns.Bound(e => e.DateFin).Format("{0:yy-MMM-dd }").Filterable(f => f.Extra(false)).Title(CadRegRES.Fin).Width(90);

                columns.Bound(e => e.Note).Title(CadRegRES.Details).Width(120);
                //columns.Bound(e => e.Termine).Filterable(f => f.Extra(false)).ClientTemplate("<center><input disabled type='checkbox' #= Termine ? checked='checked' :'' #  /></center>").Title(CadRegRES.Termine);
                columns.Bound(e => e.NomAuditeur).Title(CadRegRES.Auditeur).Width(105);
                columns.Bound(e => e.Rep1).Title("Q1");
                columns.Bound(e => e.Rep2).Title("Q2");
                columns.Bound(e => e.Rep3).Title("Q3");
                //columns.Bound(e => e.Rep1).Title("Rep1").Hidden();
                //columns.Bound(e => e.Rep1).Title("Rep1").Hidden();
                columns.Bound(e => e.NoteAudit).Title(CadRegRES.NoteAudit).Hidden().Title("Commentaires");
                columns.Command(c =>
                {
                    c.Edit().Text(CadRegRES.Audit).HtmlAttributes("");

                })
                .Width(30).Hidden(!@Model.estAudit);
            })

            .Sortable(s => s.AllowUnsort(false))
            .Events(e=>e.DataBound("onRegistreDataBound").Cancel("onRegistreDataBound").ExcelExport("excelExport"))
            .ToolBar(tools => tools.Excel()).Editable(e => e.DisplayDeleteConfirmation(false)).
            Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("TemplateLigneRegistre").Window(w => w.Title(CadRegRES.Audit).Width(600)))

            .Pageable(s => s.PageSizes(true).PageSizes(new List<int>
            { 5, 10, 20, 50 }).Input(true).Info(false).Numeric(false))
            .Filterable()
            .DataSource(ds => ds

                .Ajax()
                    //.Filter(f =>
                    //{
                    //    f.Add(b => b.Termine).IsEqualTo(false);
                    //})

                    .Sort(x => x.Add(c => c.DateDebut).Descending())

                    .PageSize(20).Model(
                        e =>
                        { e.Id(z => z.LigneRegistreId); }
                    )

                    .Read(r => r.Action("ReadLignesRegistreCadenassage", "FicheCadenassage", new { client = Model.ClientId }))
                    .Update(u => u.Action("SaveAudit", "Registre"))
                )
            )
        </div>
    </div>
</div>




<script type="text/javascript">
    function onRegistreDataBound(e) {
     
        /*setTimeout(function () {
            $("#listLignesRegistre .k-grid-edit").find("span").removeClass("k-icon k-edit");
            $("#listLignesRegistre .k-grid-edit").removeClass("k-button k-button-icontext").addClass("btn btn-success");   
        }, 1);*/

    }
    var exportFlag = false;
    function excelExport(e) {
           
        if (!exportFlag) {
            e.sender.showColumn(12);
            e.sender.showColumn(13);
            e.sender.showColumn(14);
            e.sender.showColumn(15);
            e.sender.showColumn(16);
            e.sender.showColumn(17);
            e.preventDefault();
            exportFlag = true;
            setTimeout(function () {
                e.sender.saveAsExcel();
            });
        } else {
            e.sender.hideColumn(12);
            e.sender.hideColumn(13);
            e.sender.hideColumn(14);
            e.sender.hideColumn(15);
            e.sender.hideColumn(16);
            e.sender.hideColumn(17);
            exportFlag = false;
        }

        // By pass the width bug of the table
        jQuery('#Employes table').css('width', '100%');
        setTimeout(function () {
            location.reload(true);
        }, 4000);
    }
</script>