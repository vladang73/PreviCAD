@model LigneDecadenassageViewModel
@using Previgesst.Ressources.Cadenassage

<style>
    div.k-edit-form-container {
        width: auto;
    }

    .form-control {
        width: 95%;
    }

    div.k-edit-form-container div.editor-field textarea, input.k-textbox, .k-dropdown {
        width: 100%;
        max-width: none;
        padding-left: 0px;
    }



    .petit {
        max-height: 20px;
    }

    .row {
        margin-right: 15px;
        margin-left: 15px;
    }

    .col {
        padding-left: 0px;
        padding-right: 0px;
    }

    .imagedd .k-dropdown .k-dropdown-wrap .k-input {
        height: 70px;
    }
</style>

<div class="container" style="width:600px;">


    <div class="panel panel-default" style="margin-left:15px;margin-right:30px;">

        <div class="panel-heading back-panel-light" style="font-size:larger;font-weight:500;color:white"></div>
        <div class="panel-body">
            @Html.HiddenFor(model => model.LigneDecadenassageId)
            @Html.HiddenFor(model => model.FicheCadenassageId)


            <div class="form-group" style="margin-bottom:5px;">
                @Html.LabelFor(model => model.InstructionId, new { @class = "control-label" })

                @(Html.Kendo().DropDownListFor(m => m.InstructionId)
                                                                    .DataValueField("InstructionId")
                                                                    .DataTextField("Identificateur")

                                                                    .Template("<div class=\"drop-down-list-item\" title=\"#=Description#-#=Dispositif#-#=Accessoire#\">#=Identificateur#</div>")
                                                                    .BindTo((System.Collections.IEnumerable)ViewData["Instructions"])
                                                                    .HtmlAttributes(new { data_value_primitive = "true" })
                                                                        .OptionLabel("-- " + CadLigneCadRES.SelectInstruction + "--")
                )
                @Html.ValidationMessageFor(model => model.InstructionId)
            </div>

            <div class="form-group imagedd" style="margin-bottom:5px;">
                @Html.LabelFor(model => model.PhotoFicheCadenassageId, new { @class = "control-label" })

                @(Html.Kendo().DropDownListFor(m => m.PhotoFicheCadenassageId)
                                                                    .DataValueField("PhotoFicheCadenassageId")
                                                                    .DataTextField("Rang")
                                                                    .BindTo((System.Collections.IEnumerable)ViewData["Photos"])
                                                                        .DataSource(c =>
                                                                        {
                                                                            c.Read(k => k.Action("getPhotos", "FicheCadenassage", new { FicheCadenassageId = ViewData["idFiche"] }));
                                                                        })
                                                                    .HtmlAttributes(new { data_value_primitive = "true" })
                                                                        .OptionLabel("-- " + CadLigneCadRES.SelectImage + "  --")
                                                                        .Template("<img style='height:65px' class='imgDropDown' src='" + Url.Content("~/Images/Cadenassage/Photos/") + "#:data.PhotoFicheCadenassageId#/thumb.jpg' /><span class='txtImgDropDown'>#:data.Rang#</span>")
                                                                        .ValueTemplate("<img style='height:65px' class='imgDropDown' src='" + Url.Content("~/Images/Cadenassage/Photos/") + "#:data.PhotoFicheCadenassageId#/thumb.jpg' /><span class='txtImgDropDown'>#:data.Rang#</span>")

                )
                @Html.ValidationMessageFor(model => model.PhotoFicheCadenassageId)
            </div>



            <div class="form-group">


                @Html.LabelFor(m => m.NoLigne, new { @class = "control-label" })

                @(Html.Kendo().NumericTextBoxFor(m => m.NoLigne)
                            .HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                            .Min(0)
                            .Decimals(1)
                            .Format("N1")
                        //.Culture(System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName + "-CA")
                )

                @Html.ValidationMessageFor(m => m.NoLigne, "", new { @class = "text-danger" })


            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TexteSupplementaireInstruction, new { @class = "control-label" })

                @Html.TextAreaFor(m => m.TexteSupplementaireInstruction, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(m => m.TexteSupplementaireInstruction, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TexteSupplementaireInstructionEN, new { @class = "control-label" })

                @Html.TextAreaFor(m => m.TexteSupplementaireInstructionEN, new { @class = "form-control", @rows = 2 })
                @Html.ValidationMessageFor(m => m.TexteSupplementaireInstructionEN, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TexteSupplementaireDispositif, new { @class = "control-label" })

                @Html.TextAreaFor(m => m.TexteSupplementaireDispositif, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(m => m.TexteSupplementaireDispositif, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TexteSupplementaireDispositifEN, new { @class = "control-label" })

                @Html.TextAreaFor(m => m.TexteSupplementaireDispositifEN, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(m => m.TexteSupplementaireDispositifEN, "", new { @class = "text-danger" })

            </div>

            @*<div class="form-group">
            @Html.LabelFor(m => m.TexteLocalisation, new { @class = "control-label" })

            @Html.TextAreaFor(m => m.TexteLocalisation, new { @class = "form-control", @rows = 3 })
            @Html.ValidationMessageFor(m => m.TexteLocalisation, "", new { @class = "text-danger" })

        </div>*@
            @*
        <div class="form-group">
            @Html.LabelFor(m => m.TexteRealiser, new { @class = "control-label" })

            @Html.TextAreaFor(m => m.TexteRealiser, new { @class = "form-control", @rows = 3 })
            @Html.ValidationMessageFor(m => m.TexteRealiser, "", new { @class = "text-danger" })

        </div>*@


            @*
            <div class="form-group">
                @Html.LabelFor(m => m.CocherColonneCadenas, new { @class = "control-label" })

                @Html.CheckBoxFor(m => m.CocherColonneCadenas)
                @Html.ValidationMessageFor(m => m.CocherColonneCadenas, "", new { @class = "text-danger" })

            </div>
            *@
            @*<div class="form-group">
                @Html.LabelFor(m => m.Realiser, new { @class = "control-label" })

                @Html.CheckBoxFor(m => m.Realiser)
                @Html.ValidationMessageFor(m => m.Realiser, "", new { @class = "text-danger" })

        </div>*@
        </div>
    </div>
</div>



<script type="text/javascript">
    $(document).ready(() => {

        var dataInput = {
            id: $('#FicheCadenassageId').val()
        };

        $.ajax({
            data: JSON.stringify(dataInput),
            url: '@Url.Action("GetNewValueDecadenassage")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (result) {



                if ($('#LigneDecadenassageId').val() == 0) {
                    var numericBox = $("#NoLigne").data("kendoNumericTextBox");
                    numericBox.value(result);


                    var z = $('.k-popup-edit-form');
                    var gview = $("#listDEC").data("kendoGrid");
                    var item = $("#listDEC").find("[data-uid='" + z.attr('data-uid') + "']");
                    var selectedItem = gview.dataItem(item);
                    selectedItem.NoLigne = result;
                    selectedItem.dirty = true;
                }

            },
            error: function (data) {

            }
        });

    });
</script>