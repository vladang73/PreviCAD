@model DocumentFicheViewModel

<style>
    div.k-edit-form-container {
        width: auto;
    }

        div.k-edit-form-container div.editor-field textarea, input.k-textbox, .k-dropdown {
            width: 100%;
            max-width: none;
            padding-left: 0px;
        }



    .petit {
        max-height: 20px;
    }

    .row {
        margin-right: 15px;
        margin-left: 15px;
    }

    .col {
        padding-left: 0px;
        padding-right: 0px;
    }
</style>

<div class="container" style="width:600px; margin:0px;padding:0px;">

    <div class="row">
        <div class="col-md-12" style="padding-left:0px;">
            @Html.HiddenFor(model => model.DocumentFicheId)
            @Html.HiddenFor(model => model.FicheCadenassageId)
            @Html.HiddenFor(model => model.ApplicationPreviId)

            <div class="panel panel-info">

                <div class="panel-heading">Document </div>
                <div class="panel-body">
                    <div class="form-group" style="margin-bottom:5px;">

                        @Html.LabelFor(model => model.Titre, new { @class = "control-label pull-left" })

                        @Html.TextBoxFor(model => model.Titre, new { @class = "form-control petit", @style = "width:95%" })
                        @Html.ValidationMessageFor(model => model.Titre)

                    </div>

                    <div class="form-group" style="margin-bottom:30px;">
                        @Html.LabelFor(model => model.FileName, new { @class = "control-label pull-left", style = "width:100%; margin-top:5px" })
                    </div>

                    <div class="form-group" style="margin-bottom:5px;">

                        @(Html.Kendo().Upload()
                              .Name("file")
                              .HtmlAttributes(new { @class = "form-control", @style = "width:100%" })
                              .Multiple(false)
                              .Async(a => a
                                        .Save("SaveDocumentFicheLinkCadenassage", "DocumentsFiche", new { id = Model.FicheCadenassageId })
                                        .AutoUpload(true)
                              )
                              .Events(e => e.Success("fileSuccess").Upload("fileUpload").Select("fileSelect"))
                        )


                    </div>

                </div>
            </div>
        </div>
    </div>
</div>






