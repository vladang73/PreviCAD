@using Previgesst.Ressources.Cadenassage
@model Previgesst.ViewModels.EditFicheViewModel

<div class="panel panel-danger">

    <div class="panel-heading back-panel-light" style="font-size:larger;font-weight:500;color:white"></div>



    <div class="panel-body">


        <div id="Documents" class="tab-pane">

            @Html.AntiForgeryToken()

            @(Html.Kendo().Grid<PhotoFicheCadenassageViewModel>()
                                    .Name("listPhoto")
                                    .Columns(columns =>
                                    {

                                        columns.Bound(e => e.PhotoFicheCadenassageId).Hidden();
                                        columns.Bound(e => e.FicheCadenassageId).Hidden();


                                        columns.Bound(c => c.Localisation);
                                        columns.Bound(c => c.LocalisationEN);
                                        columns.Bound(c => c.Rang).Filterable(f => f.Extra(false));
                                        columns.Bound(c => c.URL).EditorTemplateName("UploadEditor").Encoded(false).Sortable(false).Filterable(false).Title(CadImageRES.Image);




                                        columns.Command(c =>
                                        {
                                            c.Edit();
                                            c.Custom(CadImageRES.Effacer)
                                                  .Click("ConfirmDeleteRowPhoto")
                                                  .HtmlAttributes(new { @class = "k-grid-effacer" });

                                        })
                                           .Width(250);

                                    })

                                    .Sortable(s => s.AllowUnsort(false))
                                    .Pageable(s => s.PageSizes(true).PageSizes(new List<int> { 5, 10, 20, 50 }).Input(true).Info(false).Numeric(false))
                                    .Filterable()
                                    .DataSource(ds => ds
                                        .Ajax()
                                           .Sort(x => x.Add(c => c.Rang))

                                        .PageSize(20)
                                        .Model(m =>
                                        {
                                            m.Id(e => e.PhotoFicheCadenassageId);
                                        })

                                    .Read(r => r.Action("ReadListPhoto", "FicheCadenassage", new { ficheId = Model.FicheCadenassageId }))
                                    .Create(c => c.Action("SaveItemPhoto", "FicheCadenassage", new { ficheId = Model.FicheCadenassageId }))
                                    .Update(u => u.Action("SaveItemPhoto", "FicheCadenassage", new { ficheId = Model.FicheCadenassageId }))
                                    .Destroy(u => u.Action("DeleteItemPhoto", "FicheCadenassage"))
                                    
                                    .Events(e => e.Error("ListeErreurPhoto").RequestEnd("EndPhoto").Sync("ImagesSync"))
                                    )

                                    .Events(e => e.DataBound("ListeDataBoundPhoto"))
                                    .Editable(e => e.DisplayDeleteConfirmation(false))


                                    @*.ToolBar(tb =>
                                        {
                                        tb.Template(@<a href="/File/CreateARDoc" class="btn btn-success"><i class="fa fa-plus"></i> Ajouter un nouveau document</a>);
                                        }*@

                                    .ToolBar(t =>
                                    {
                                        t.Create();
                                    })
            )


        </div>
    </div>
</div>


<script>
    $("#ImageCadFich").click(function () {
        // ADD ICONE "+"
        $('.cadenassageContent #listPhoto .k-grid-add img').remove();
        setTimeout(function () { $("#ImagesFiche").find(".btn-success").append('<img class="addButtonImg" src="/Images/addWhite.png">'); }, 50);
    });

    function EndPhoto(e) {
        
        if (e.type == "update" || e.type == "destroy" || e.type == "create") {
            $("#listCAD").data("kendoGrid").dataSource.read();
            $("#listDEC").data("kendoGrid").dataSource.read();  
        }
    }

    function fileSuccess(e) {


     
        var grid = $('#listPhoto').data('kendoGrid');
        var item = grid.dataItem('tr.k-grid-edit-row');
    

        {

            item.set('PhotoFicheCadenassageId', e.response.PhotoFicheCadenassageId);
            item.set('FicheCadenassageId', e.response.FicheCadenassageId);  
            item.set('Rang', e.response.Rang)
            item.set('URL', e.response.URL)
            item.set('Suppressible', e.response.Suppressible)
            item.set('Localisation', e.response.Localisation)
            item.set('LocalisationEN', e.response.LocalisationEN)
         

        }
     //   debugger;
      //  $("#DDLigneInstruction").data("kendoDropDownList").refresh();
       // $("#DDLigneDecadenassage").data("kendoDropDownList").refresh();
    
     

    }



    function fileUpload(e) {
    
        var grid = $('#listPhoto').data('kendoGrid');
        var selectedItem = grid.dataItem('tr.k-grid-edit-row');

        selectedItem.dirty = true;
        e.data = { PhotoFicheCadenassageId: selectedItem.PhotoFicheCadenassageId, Rang: selectedItem.Rang,  FicheCadenassageId: '@Model.FicheCadenassageId', Localisation:selectedItem.Localisation , LocalisationEN:selectedItem.LocalisationEN};


    }

      function fileSelectJpg(e) {

        var extension = e.files[0].extension.toLowerCase().trim();

        if (extension.toLowerCase() != ".jpg" && extension.toLowerCase() != ".jpeg") {
            e.preventDefault();
         

        ShowNotification("@CadImageRES.ErreurTypeFichier", '@CadImageRES.ErreurDescription', "infoTemplate")
        }
        }

   

        function ConfirmDeleteRowPhoto(e) {

            e.preventDefault();

            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            var dataItem = this.dataItem(row);

            ShowDeleteConfirm(dataItem.Rang, function (args) {
                if (args.confirmed === true) {
                    grid.removeRow(row);
                }
            });

        }


            function ListeErreurPhoto(args) {

                var selecteurGrid = "#listPhoto";
                if (args.errors) {
                    var grid = $(selecteurGrid).data("kendoGrid");
                    var validationTemplate = kendo.template($("#gridValidationMessageTemplate").html());
                    grid.one("dataBinding", function (e) {
                        e.preventDefault();

                        $.each(args.errors, function (propertyName) {
                            var errorList = validationTemplate({ field: propertyName, messages: this.errors });
                            alert(this.errors);
                            ShowNotification("@CadImageRES.Erreur",
                                errorList,
                               "errorListTemplate");
                        });
                    });
                }



            }

            function ListeDataBoundPhoto(e) {

                
                var selecteurGrid = "#listPhoto";
                var grid = $(selecteurGrid).data("kendoGrid");
                
                //$(selecteurGrid + " .k-grid-effacer").find("span").addClass("k-icon k-delete");
                
                //Selects all delete buttons
                $(selecteurGrid + " tbody tr .k-grid-effacer").each(function () {
                    var currentDataItem = grid.dataItem($(this).closest("tr"));

                    //Check in the current dataItem if the row is deletable
                    if (!currentDataItem.Suppressible) {

                        $(this).remove();
                    }
                })
            }

// reload pour masquer le bouton de suppression qui réapparait comme par magie sur Undo.
    $(document).ready(function () {
        $("#listPhoto").on("mousedown", ".k-grid-cancel", function (e) {
            e.preventDefault = false;
            $("#listPhoto").data("kendoGrid").dataSource.read();  

        });
    });

    function ImagesSync(e) {
        if ($('#ApprouvePar') != undefined) { $('#ApprouvePar').val(''); }
        if ($('#DateApproved') != undefined) { $('#DateApproved').val(''); }

        //window.location.reload();
    }
</script>