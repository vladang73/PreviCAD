@using Previgesst.Ressources.Cadenassage
@model EditFicheViewModel



@{
    string editFicheUrl = "EditFiche";
    string creerFicheUrl = "CreerFiche";
    string currentUrl = System.Web.HttpContext.Current.Request.Url.AbsoluteUri;
    var vm = new EditFicheViewModel();

    if (currentUrl.Contains(editFicheUrl))
    {
        vm.sauvegarderMaFicheDeCadenassage = "EditerFiche";
    }
    else if (currentUrl.Contains(creerFicheUrl))
    {
        vm.sauvegarderMaFicheDeCadenassage = "SaveFiche";
    }
    else
    {
        vm.sauvegarderMaFicheDeCadenassage = "SaveFiche";
    }
}


<div class="table-top-header">
    <div class="page-title d-flex justify-content-center align-items-center">
        <h3 class="m-0">
            @if (Model.FicheCadenassageId == 0)
            {
                @CadEditFicheRES.CreationFiche
            }
            else
            {
                @CadEditFicheRES.EditionFiche @Model.NoFiche
            }
        </h3>
    </div>
</div>


@using (Html.BeginForm(vm.sauvegarderMaFicheDeCadenassage, "FicheCadenassage", FormMethod.Post, new { @class = "form-horizontal needs-validation", role = "form" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true, "", new { @class = "text-danger" });

    @Html.HiddenFor(model => model.ClientId)
    @Html.HiddenFor(model => model.FicheCadenassageId)
    @Html.HiddenFor(model => model.EstDocumentPrevigesst)
    @Html.HiddenFor(model => model.NomClient)

    @Html.HiddenFor(model => model.CreatedPar)
    @Html.HiddenFor(model => model.UpdatedPar)

    @*@Html.HiddenFor(model => model.DateCreation)*@

    <input type="hidden" id="DateCreation" name="DateCreation" value="@Model.DateCreation.Value.ToString("yyyy-MM-dd H:mm:ss")" />
    <input type="hidden" id="DateUpdated" name="DateUpdated" value="@Model.DateUpdated.Value.ToString("yyyy-MM-dd H:mm:ss")" />

    @*

        @Html.HiddenFor(model => model.DateUpdated)*@

    <div class="row">
        <div class="form-group">
            @if (Model.FicheCadenassageId != 0)
            {
                <div>
                    <a href='~/FicheCadenassage/GetFiche?id=@Model.FicheCadenassageId' class='btn btn-info buttonView'>@CadInfoGeneralesRES.Fiche</a>
                </div>
            }
        </div>


        <div class="col-12 col-md-2">
            <p>
                @Html.LabelFor(m => m.CreatedPar, new { @class = "create-title" })
                <span class="create-value">
                    @Model.CreatedPar
                </span>
            </p>
            <p>
                <span class="create-title">
                    @Html.LabelFor(m => m.DateCreation, new { @class = "create-title" })
                </span>
                <span class="create-value">@Model.DateCreation</span>
            </p>
        </div>
        <div class="col-12 col-md-10">
            <p>
                @Html.LabelFor(m => m.UpdatedPar, new { @class = "create-title" })
                <span class="create-value">@Model.UpdatedPar</span>
            </p>
            <p>
                @Html.LabelFor(m => m.DateUpdated, new { @class = "create-title" })
                <span class="create-value">@Model.DateUpdated</span>
            </p>
        </div>


        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.EquipementId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.EquipementId)
                    .HtmlAttributes(new { @class = "form-select p-0", style = "width:100%" })
                    .OptionLabel("-- " + CadInfoGeneralesRES.SelectionnerEquipement + " --")
                    .DataValueField(nameof(EquipementDDLViewModel.EquipementId))
                    .DataTextField(nameof(EquipementDDLViewModel.NomEquipement))
                    .BindTo((System.Collections.IEnumerable)ViewData["Equipements"])
                )


                @Html.ValidationMessageFor(m => m.EquipementId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.DepartementId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.DepartementId)
                    .HtmlAttributes(new { @class = "select-control p-0", style = "width:100%" })
                    .OptionLabel("-- " + CadInfoGeneralesRES.SelectionnerDepartement + " --")
                    .DataValueField(nameof(DepartementDDLViewModel.DepartementId))
                    .DataTextField(nameof(DepartementDDLViewModel.NomDepartement))
                    .BindTo((System.Collections.IEnumerable)ViewData["Departements"])
                )


                @Html.ValidationMessageFor(m => m.DepartementId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.TravailAEffectuer, new { @class = "form-label d-block" })

                @Html.TextAreaFor(m => m.TravailAEffectuer, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(m => m.TravailAEffectuer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.TravailAEffectuerEN, new { @class = "form-label d-block" })

                @Html.TextAreaFor(m => m.TravailAEffectuerEN, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(m => m.TravailAEffectuerEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.NoFiche, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NoFiche, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NoFiche, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.TitreFiche, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.TitreFiche)
                    .HtmlAttributes(new { @class = "form-control", style = "width:100%" })
                    .OptionLabel("-- " + CadInfoGeneralesRES.SelectionnerTypeFiche + " --")
                    .DataValueField(nameof(TitreFicheDDLViewModel.Texte))
                    .DataTextField(nameof(TitreFicheDDLViewModel.Texte))
                    .BindTo((System.Collections.IEnumerable)ViewData["Titres"])
                )

                @Html.ValidationMessageFor(m => m.TitreFiche, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-12 col-md-6">
            <div class="mt-5">
                @Html.LabelFor(m => m.AfficherClient, new { @class = "form-label d-block" })

                @*@Html.CheckBoxFor(m => m.AfficherClient, new { @style = "vertical-align:middle;margin-left:5px" })*@

                <div class="squaredThree squaredThree-blue">
                    <input type="checkbox" id="squaredone" name="AfficherClient" @(Model.AfficherClient ? "checked": "") />
                    <label for="squaredone"><span> </span></label>
                </div>

                @Html.ValidationMessageFor(m => m.AfficherClient, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (currentUrl.Contains(editFicheUrl))
        {
            <div class="col-12 col-md-6">
                <div class="mt-5">
                    <div class="row">
                        <div class="col">
                            @Html.LabelFor(m => m.ValidatedPar, new { @class = "form-label d-block" })

                            @Html.TextBoxFor(m => m.ValidatedPar, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ValidatedPar, "", new { @class = "text-danger" })
                        </div>
                        <div class="col">
                            @Html.LabelFor(m => m.DateValidated, new { @class = "form-label d-block" })

                            <input name="DateValidated" id="DateValidated" class="form-control" readonly="readonly" value="@Model.DateValidated" />
                            @Html.ValidationMessageFor(m => m.DateValidated, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col">
                            @Html.LabelFor(m => m.ApprouvePar, new { @class = "form-label d-block" })

                            @Html.TextBoxFor(m => m.ApprouvePar, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ApprouvePar, "", new { @class = "text-danger" })
                        </div>
                        <div class="col">
                            @Html.LabelFor(m => m.DateApproved, new { @class = "form-label d-block" })

                            <input name="DateApproved" id="DateApproved" class="form-control" readonly="readonly" value="@Model.DateApproved" />
                            @Html.ValidationMessageFor(m => m.DateApproved, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }



        <div class="col-12 d-flex justify-content-end pt-5">
            <input type="submit" class="btn btn-primary" name="save" value="@CadInfoGeneralesRES.Enregistrer" />

            @if (currentUrl.Contains(editFicheUrl))
            {
                @:&nbsp;

                <input type="submit" class="btn btn-primary" name="validate" value="@CadInfoGeneralesRES.ValidatedButton" />

                if (!string.IsNullOrEmpty(Model.ValidatedPar))
                {
                    @:&nbsp;
                    <input type="submit" class="btn btn-success" name="approve" value="@CadInfoGeneralesRES.Approuve" />
                }
            }
        </div>

    </div>
}






@*<div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.CreatedPar, new { @class = "create-title" })
            </div>
            <div class="col-md-6">
                @Html.TextBoxFor(m => m.CreatedPar, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.CreatedPar, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.DateCreation, new { @class = "create-title" })
            </div>
            <div class="col-md-6">
                <input name="DateCreation" id="DateCreation" class="form-control" readonly="readonly" value="@Model.DateCreation" />

                @Html.ValidationMessageFor(m => m.DateCreation, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="form-group">
        <div class="col-md-3">
            @Html.LabelFor(m => m.UpdatedPar, new { @class = "control-label" })
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(m => m.UpdatedPar, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.UpdatedPar, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-3">
            @Html.LabelFor(m => m.DateUpdated, new { @class = "control-label" })
        </div>
        <div class="col-md-6">
            <input name="DateUpdated" id="DateUpdated" class="form-control" readonly="readonly" value="@Model.DateUpdated" />

            @Html.ValidationMessageFor(m => m.DateUpdated, "", new { @class = "text-danger" })
        </div>
    </div>
*@





@*<div class="form-group">
            @Html.LabelFor(m => m.ApprouvePar, new { @class = "control-label" })

            @Html.TextBoxFor(m => m.ApprouvePar, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ApprouvePar, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.DateCreation, new { @class = "control-label" })

            @(Html.Kendo().DatePickerFor(m => m.DateCreation).HtmlAttributes(new { @class = "form-control", @style = "margin-left:5px" }))
            @Html.ValidationMessageFor(m => m.BidonErreurCreation, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.DateRevision, new { @class = "control-label" })

            @(Html.Kendo().DatePickerFor(m => m.DateRevision).HtmlAttributes(new { @class = "form-control", @style = "margin-left:5px" }))
            @Html.ValidationMessageFor(m => m.DateRevision, "", new { @class = "text-danger" })

        </div>
    <div class="form-group hidden">
            @Html.LabelFor(m => m.RevisionCourante, new { @class = "control-label" })

            @Html.CheckBoxFor(m => m.RevisionCourante, new { @style = "vertical-align:middle;margin-left:5px" })
            @Html.ValidationMessageFor(m => m.RevisionCourante, "", new { @class = "text-danger" })

        </div>*@