@using Previgesst.Ressources
@using Previgesst.Ressources.Cadenassage
@model Previgesst.ViewModels.EditCadenassageViewModel



<div class="table-top-header">
    <div class="page-title d-flex justify-content-center align-items-center">
        <h3 class="m-0">@CadEditRES.Equipements</h3>
    </div>
    <div class="page-table-meta">
        <div class="add-icon">
            <a id="btnAddEquip">
                <img src="/content/v2/images/plus-icon.svg" />
            </a>
        </div>
        <div class="search-qr-code">
            <a class="text-decoration-none text-white btn-print-qr" href="#">
                <img src="/content/v2/images/scanner.svg">
                <span>@CadEquipRES.PrintQRCode</span>
            </a>
        </div>
    </div>
</div>






@Html.AntiForgeryToken()

@(Html.Kendo().Grid<EquipementViewModel>()
                .Name("listEquipement")
                .HtmlAttributes(new { @class = "eq-grid-class fix-grid-height-na" })
                .Columns(columns =>
                {
                    columns.Bound(e => e.EquipementId).Hidden();
                    columns.Bound(e => e.QRCode).Hidden();

                    columns.Bound(e => e.Thumbnail).ClientTemplate("# if(Thumbnail != null) {# <img class='mx-1 img-eq' src='#=Thumbnail#' /> #}#")
                    .EditorTemplateName("VideView").Title("").Filterable(false).Sortable(false)
                    .HtmlAttributes(new { @class = "td-round-left-border" })
                    .Width("110px")
                    ;

                    //NomEquipement
                    columns.Bound(c => c.NumeroEquipment)
                    .Filterable(f => f.Extra(false).Operators(operators => operators
                        .ForString(str => str.Clear()
                            .Contains(GridRES.Contains)
                            .StartsWith(GridRES.StartsWith)
                            .IsEqualTo(GridRES.Egale)
                            .IsNotEqualTo(GridRES.NotEquals)
                    )));

                    columns.Bound(c => c.NomEquipement)
                        .Filterable(f => f.Extra(false).Operators(operators => operators
                            .ForString(str => str.Clear()
                            .Contains(GridRES.Contains)
                            .StartsWith(GridRES.StartsWith)
                            .IsEqualTo(GridRES.Egale)
                            .IsNotEqualTo(GridRES.NotEquals)
                    )));

                    columns.Bound(c => c.NomEquipementEN)
                        .Filterable(f => f.Extra(false).Operators(operators => operators
                            .ForString(str => str.Clear()
                            .Contains(GridRES.Contains)
                            .StartsWith(GridRES.StartsWith)
                            .IsEqualTo(GridRES.Egale)
                            .IsNotEqualTo(GridRES.NotEquals)
                        )));

                    columns.Bound(e => e.Thumbnail).ClientTemplate("<a onclick='changerImage(#=EquipementId#)' class='k-button btn-img mx-1 cadenassageImageDownload' href='\\#'></a>").EditorTemplateName("VideView").Title("").Filterable(false).Sortable(false).Width("75px");

                    columns.Command(command => command.Custom("Détails").Click("showDetailsNew").Text(CadEquipRES.ButtonDetails).HtmlAttributes(new { @class = "btn-detail mx-1" })).Width("135px");

                    columns.Command(command => command.Custom("Énergie").Click("showDetailsEnergie").Text(CadEquipRES.ButtonEnergy).HtmlAttributes(new { @class = "btn-energy mx-1" })).Width("140px");

                    columns.Command(command => command.Custom("QR").Click("showDetailsQR").Text(CadEquipRES.ButtonQR).HtmlAttributes(new { @class = "btn-qr mx-1" })).Width("105px");


                    columns.Command(c =>
                    {
                        c.Edit().Text(CadEquipRES.ButtonEdit).HtmlAttributes(new { @class = "btn-table btn-edit"});
                        c.Custom(CadEquipRES.Vide)
                            .Click("ConfirmDeleteRowEQ")
                            .HtmlAttributes(new { @class = "k-grid-effacer btn-del" });
                    })
                    .Width("200px").HtmlAttributes(new { @class = "text-nowrap"});

                    columns.Bound(e => e.Model).Hidden();
                    columns.Bound(e => e.Manufacturer).Hidden();
                    columns.Bound(e => e.Task).Hidden();
                    columns.Bound(e => e.RiskAnalysis).Hidden();
                    columns.Bound(e => e.LockoutProcedure).Hidden();
                    columns.Bound(e => e.SafeWorkProcedure).Hidden();
                })
                .Sortable(s => s.AllowUnsort(false))
                .Pageable(s => s.PageSizes(true).PageSizes(new List<int> { 5, 10 }).Input(true).Info(false).Numeric(false))
                .Filterable()
                .DataSource(ds => ds
                    .Ajax()
                    .PageSize(10).Sort(x => x.Add(c => c.NomEquipement))
                    .Model(m =>
                    {
                        m.Id(e => e.EquipementId);
                        m.Field(e => e.Suppressible).DefaultValue(true);
                        m.Field(e => e.Thumbnail).Editable(false);
                    })
                    .Read(r => r.Action("ReadListEquipement", "Equipement", new { client = Model.ClientId }))
                    .Create(c => c.Action("SaveEquipement", "Equipement", new { client = Model.ClientId }))
                    .Update(u => u.Action("SaveEquipement", "Equipement", new { client = Model.ClientId }))
                    .Destroy(d => d.Action("DeleteEquipement", "Equipement"))
                    .Events(e => e.Error("ListeErreurEQ"))
                )
                .Events(e => e.DataBound("ListeDataBoundEQ").Edit("Edit"))
                .Editable(e => e
                    .Mode(GridEditMode.InLine)
                    .CreateAt(GridInsertRowPosition.Top)
                    .DisplayDeleteConfirmation(false)
                )
                .ToolBar(t =>
                {
                    t.Create().HtmlAttributes(new { @class = "btn-test d-none" });
                })

                .Scrollable()
                .HtmlAttributes(new { @class = "k-grid-height" })
            )
@(Html.Kendo().Window().Name("EqDetails")
        .Title(CadEquipRES.EquipmentMgmt)
        .Visible(false)
        .Modal(true)
        .Width(650)
)
@(Html.Kendo().Window().Name("QrDetails")
        .Title(@CadEquipRES.CreateEquipmentQR)
        .Visible(false)
        .Modal(true)
        .Width(335)
)
@(Html.Kendo().Window().Name("EqWithQR")
        .Title(CadEquipRES.SelectQRToPrint)
        .Visible(false)
        .Modal(true)
        .Width(700)
        .Height(650)
        .HtmlAttributes(new { @class = "mt-4"})
)


<script type="text/x-kendo-template" id="eqTemplate">
    <div id="row">
    <div id="col-11">
        <div id="details-contaner" class="p-4 bg-white">

            <input type="hidden" id="EquipementId" value="#=EquipementId#" />


            <div class="form-group mt-3">
                <label for="Manufacturer" class="form-label d-block">Fabricant</label>
                <input type="text" class="form-control petit" id="Manufacturer" name="Manufacturer" value="#= (Manufacturer == null) ? '' : Manufacturer #" />
            </div>

            <div class="form-group mt-3">
                <label for="Model" class="form-label d-block">Modèle</label>
                <input type="text" class="form-control petit" id="Model" name="Model" value="#= (Model == null) ? '' : Model #" />
            </div>

            <div class="form-group mt-3">
                <label for="NumberOfSerie" class="form-label d-block">Numéro de série</label>
                <input type="text" class="form-control petit" id="NumberOfSerie" name="NumberOfSerie" value="#= (NumberOfSerie == null) ? '' : NumberOfSerie #" />
            </div>

            <div class="form-group mt-3">
                <label for="YearOfProduction" class="form-label d-block">Année de fabrication</label>
                <input type="text" class="form-control petit" id="YearOfProduction" name="YearOfProduction" value="#= (YearOfProduction == null) ? '' : YearOfProduction #" />
            </div>

            <div class="form-group mt-3">
                <label for="Function" class="form-label d-block">Fonction</label>
                <input type="text" class="form-control petit" id="Function" name="Function" value="#= (Function == null) ? '' : Function #" />
            </div>

            <div class="form-group mt-3">
                <label for="Model" class="form-label d-block">Tâches</label>
                <select id="Task" multiple="multiple" data-placeholder="Sélectionner des tâches">
                    <option>Montage</option>
                    <option>Installation</option>
                    <option>D’ajustement</option>
                    <option>Inspection</option>
                    <option>Décoinçage</option>
                    <option>Réglage</option>
                    <option>Mise hors d’usage</option>
                    <option>Entretien</option>
                    <option>Désassemblage</option>
                    <option>Nettoyage</option>
                    <option>Maintenance</option>
                    <option>Remise à neuf</option>
                    <option>Réparation</option>
                    <option>Modification ou de déblocage</option>
                </select>
            </div>

            <div class="form-group mt-3">
                <input type="checkbox" id="RiskAnalysis" name="RiskAnalysis" # if (RiskAnalysis) { # checked=\"checked\" # } # />
                <label for="RiskAnalysis">Analyse de risque complétée</label>
            </div>

            <div class="form-group mt-3">
                <input type="checkbox" id="LockoutProcedure" name="LockoutProcedure" # if (LockoutProcedure) { # checked=\"checked\" # } # />
                <label for="LockoutProcedure">Procédure de cadenassage complétée</label>
            </div>

            <div class="form-group mt-3">
                <input type="checkbox" id="SafeWorkProcedure" name="SafeWorkProcedure" # if (SafeWorkProcedure) { # checked=\"checked\" # } # />
                <label for="SafeWorkProcedure">Procédure de travail sécuritaire complétée</label>
            </div>
        </div>

            <div class="form-group mt-3 text-right text-end">
                <a class="k-button k-button-icontext k-grid-update btn-mettre m-1" onclick="SaveEquipementsInfo()">
                    Mettre à jour
                </a>

                <a class="k-button k-button-icontext k-grid-cancel btn-Annuler m-1" onclick="closeDetailsNew()">
                    Annuler
                </a>
            </div>

    </div>
    </div>
</script>

<script type="text/x-kendo-template" id="qrTemplate">
    <div id="details-container-qr" class="p-4 bg-white">

        <input type="hidden" id="EquipementId" value="#=EquipementId#" />


        <div class="form-group">
            <img class="img-responsive" id="QRCode" name="QRCode" style="width: 240px;" />
        </div>


        <div class="form-group text-end mt-3">
            <a class="k-button k-button-icontext k-grid-update btn-mettre m-1" onclick="SaveQRInfo()">
                Mettre à jour
            </a>

            <a class="k-button k-button-icontext k-grid-cancel btn-Annuler m-1" onclick="closeDetailsQR()">
                Annuler
            </a>
        </div>

    </div>
</script>

<script type="text/javascript" charset="utf-8">

    var detailsTemplate;
    var energieTemplate;
    var qrCodeTemplate;

    // Initialize the variable which will hold the scroll positions.
    var scrollOffset = {
        left: 0,
        top: 0
    };

    $(document).ready(function () {
        detailsTemplate = kendo.template($("#eqTemplate").html());
        qrCodeTemplate = kendo.template($("#qrTemplate").html());
        //energieTemplate = kendo.template($("#engTemplate").html());

        $('.btn-print-qr').removeClass("k-button  k-button-icontext");
    });

    function showDetailsNew(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wind = $("#EqDetails").data("kendoWindow");

        wind.content(detailsTemplate(dataItem));
        wind.center().open();
        var multiselect = $('#details-contaner').find("#Task").kendoMultiSelect().data("kendoMultiSelect");

        if (dataItem.Task != null) {
            multiselect.value(dataItem.Task.split(','));
            multiselect.trigger("change");
        }
    }

    function closeDetailsNew() {
        $("#EqDetails").data("kendoWindow").close();
    }

    function SaveEquipementsInfo() {
        //if valid
        var model = {
            EquipementId: $('#details-contaner').find("#EquipementId").val(),
            Model: $('#details-contaner').find("#Model").val(),
            Manufacturer: $('#details-contaner').find("#Manufacturer").val(),
            NumberOfSerie: $('#details-contaner').find("#NumberOfSerie").val(),
            YearOfProduction: $('#details-contaner').find("#YearOfProduction").val(),
            Function: $('#details-contaner').find("#Function").val(),
            Task: $('#details-contaner').find("#Task").val().join(),
            RiskAnalysis: $('#details-contaner').find("#RiskAnalysis").is(':checked'),
            LockoutProcedure: $('#details-contaner').find("#LockoutProcedure").is(':checked'),
            SafeWorkProcedure: $('#details-contaner').find("#SafeWorkProcedure").is(':checked'),
        };

        console.log(model);

        $.ajax({
            url: '/Equipement/SaveEquipementNew/',
            type: 'POST',
            data: model,
            dataType: 'json',
            cache: false,
            success: function (result) {
                closeDetailsNew();
                $('#listEquipement').data('kendoGrid').dataSource.read();
            },
            error: function (req, status, errorObj) {
            }
        });
    }


    //$("#Equip").click(function () {

    //    //$("#listEquipement").find("a.k-grid-add").removeClass("k-button  k-button-icontext").addClass("btn-test d-none");

    //    //$("#listEquipement").find("span.k-grid-add").addClass("btn btn-success btn-test");

    //    //$("#listEquipement").find("a.btn-test").text("");


    //    //// ADD ICONE "+"
    //    //setTimeout(function () {
    //    //    $("#listEquipement").find(".btn-test").append('<img class="addButtonImg" src="/content/v2/images/plus-icon.svg">');
    //    //    //$("#Equipements").find('div.add-icon').append($("#listEquipement").find("a.btn-test"))
    //    //}, 50);
    //});

    function showDetailsEnergie(e) {

        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        window.location.href = "/FicheCadenassage/EquipementArticuloes/" + dataItem.EquipementId + "?client=" + @Model.ClientId;
    }


    var imageWindow;
    var timer;
    function Edit(e)
    {
        $(e.container).find('[value=Image]').hide();
        $(e.container).find('.k-grid-Détails').hide();
        $(e.container).find('.k-grid-Énergie').hide();
        $(e.container).find('.k-grid-QR').hide();
        $(e.container).find('.btn-img').hide();

        // add save and cancel classes
        $(e.container).find('.k-grid-update.btn-table').removeClass('btn-edit').addClass('btn-mettre m-1');
        $(e.container).find('.k-grid-cancel.btn-table').removeClass('btn-edit').addClass('btn-Annuler m-1');


        e.container.find(".k-grid-cancel").bind("click", function () {
            //console.log(e);

            if (!e.model.Suppressible) {
                $('#listEquipement').data('kendoGrid').dataSource.read();
            }
        });
    }

    function changerImage(e) {

        var config = {
            path: '@Url.Content("~/upload/setEquipPic/")'
        };

        imageWindow = PopupCenter(config.path + e, "@CadEquipRES.ChangerImage", 600, 300);
        timer = setInterval(checkWindow, 100);
    }

    function showDetails(e) {

        var config = {
            path: '@Url.Content("~/FicheCadenassage/equipement/EditEquipement")'
        };

        imageWindow = PopupCenter(config.path + e, "@CadEquipRES.Details", 600, 600);
        timer = setInterval(checkWindow, 100);
    }

    function checkWindow()
    {
        if (imageWindow.closed) {

            $('#listEquipement').data('kendoGrid').dataSource.read();
            $("#myimg").removeAttr("src").attr("src", "/myimg.jpg");
            $('#listEquipement').data('kendoGrid').refresh();

                clearInterval(timer);
            }

    }

    function PopupCenter(url, title, w, h) {
        var userAgent = navigator.userAgent,
            mobile = function () {
                return /\b(iPhone|iP[ao]d)/.test(userAgent) ||
                    /\b(iP[ao]d)/.test(userAgent) ||
                    /Android/i.test(userAgent) ||
                    /Mobile/i.test(userAgent);
            },
            screenX = typeof window.screenX != 'undefined' ? window.screenX : window.screenLeft,
            screenY = typeof window.screenY != 'undefined' ? window.screenY : window.screenTop,
            outerWidth = typeof window.outerWidth != 'undefined' ? window.outerWidth : document.documentElement.clientWidth,
            outerHeight = typeof window.outerHeight != 'undefined' ? window.outerHeight : document.documentElement.clientHeight - 22,
            targetWidth = mobile() ? null : w,
            targetHeight = mobile() ? null : h,
            V = screenX < 0 ? window.screen.width + screenX : screenX,
            left = parseInt(V + (outerWidth - targetWidth) / 2, 10),
            right = parseInt(screenY + (outerHeight - targetHeight) / 2.5, 10),
            features = [];
        if (targetWidth !== null) {
            features.push('width=' + targetWidth);
        }
        if (targetHeight !== null) {
            features.push('height=' + targetHeight);
        }
        features.push('left=' + left);
        features.push('top=' + right);
        features.push('scrollbars=0');
        features.push('location=0');
        features.push('menubar=0');
        features.push('title=0');
        features.push('resizable=0');



        var newWindow = window.open(url, title, features.join(','));

        if (window.focus) {
            newWindow.focus();
        }

        return newWindow;
    }




    function ConfirmDeleteRowEQ(e) {
        e.preventDefault();

        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var dataItem = this.dataItem(row);

        ShowDeleteConfirm(dataItem.NomEquipement, function (args) {
            if (args.confirmed === true) {
                console.log('deleting', args);
                grid.removeRow(row);
            }
        });
    }



    function ListeErreurEQ(args) {
        var selecteurGrid = "#listEquipement";
        var grid = $(selecteurGrid).data("kendoGrid");
        if (args.errors) {
            var validationTemplate = kendo.template($("#gridValidationMessageTemplate").html());
            grid.one("dataBinding", function (e) {
                e.preventDefault();

                $.each(args.errors, function (propertyName) {
                    var errorList = validationTemplate({ field: propertyName, messages: this.errors });
                    ShowNotification("@CadEquipRES.Erreurs", errorList, "errorListTemplate");
                });
            });
        }
        else if (args.xhr) {
            ShowGridError("@Html.Raw(CadEquipRES.Erreurs)", selecteurGrid, args);
        }
    }

    function ListeDataBoundEQ(e) {
        //console.log('Calling ListeDataBoundEQ ...');
        //var selecteurGrid = "#listEquipement";
        //var grid = $(selecteurGrid).data("kendoGrid");


        ////$(selecteurGrid + " .k-grid-effacer");
        ////$(selecteurGrid +' .btn-table').removeClass("k-button  k-button-icontext");



        ////Selects all delete buttons
        ////$(selecteurGrid + " tbody tr .k-grid-effacer").each(function () {
        ////    var currentDataItem = grid.dataItem($(this).closest("tr"));

        ////    //Check in the current dataItem if the row is deletable
        ////    if (!currentDataItem.Suppressible) {

        ////        $(this).remove();
        ////    }
        ////})

        //var container = e.sender.wrapper.children(".k-grid-content"); // or ".k-virtual-scrollable-wrap"
        //container.scrollLeft(scrollOffset.left);
        //container.scrollTop(scrollOffset.top); // use only if virtual scrolling is disabled
    }

    //function ListeDataBindingEQ(e) {
    //    debugger;
    //    var container = e.sender.wrapper.children(".k-grid-content"); // or ".k-virtual-scrollable-wrap"
    //    scrollOffset.left = container.scrollLeft();
    //    scrollOffset.top = container.scrollTop(); // use only if virtual scrolling is disabled
    //}


    function showDetailsQR(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wind = $("#QrDetails").data("kendoWindow");

        wind.content(qrCodeTemplate(dataItem));
        wind.center().open();

        if (dataItem.QRCode.includes('QRCode.png')) {
            $('img#QRCode').attr('src', dataItem.QRCode);
        }
    }

    function closeDetailsQR() {
        $("#QrDetails").data("kendoWindow").close();
    }

    function SaveQRInfo() {
        var eqId = $('#details-container-qr').find("#EquipementId").val();

        console.log('eqId', eqId);

        $.ajax({
            url: '/Equipement/SaveEquipementQR?id=' + eqId,
            type: 'POST',
            //data: model,
            dataType: 'json',
            cache: false,
            success: function (result) {
                if (result.isSuccess == true) {
                    $('#listEquipement').data('kendoGrid').dataSource.read();

                    $('#details-container-qr').find("#QRCode").attr('src', result.QRCode);
                }
            },
            error: function (req, status, errorObj) {
            }
        });
    }

    $(document).on('click', '.btn-print-qr', ShowQRSelection);

    function ShowQRSelection() {
        var url = "@Url.Action("OnlyWithQR", "FicheCadenassage", new { @id = Model.ClientId })";
        var temp = $("#EqWithQR").data("kendoWindow");


        var evt = function () {
            console.log('loading grid');

            $("#gridTest").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "@Url.Action("OnlyWithQRData", "FicheCadenassage", new { @id = Model.ClientId })",
                            dataType: "json"
                        }
                    }
                },
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            contains: "@GridRES.Contains",
                            startswith: "@GridRES.StartsWith",
                            eq: "@GridRES.Egale",
                            neq: "@GridRES.NotEquals"
                        }
                    }
                },

                height: "400px",
                /*scrollable: true,*/
                sortable: true,
                resizable: true,
                columns: [
                    {
                        field: "EquipementId", filterable: false, sortable: false, width: "55px",
                        template: "<center><div class='squaredThree squaredThree-blue'><input type='checkbox' id='squaredone' name='selected-equi' class='selected-equi'  data-eqid='#: EquipementId #' /><label for='squaredone'><span> </span></label></div></center>",
                        headerTemplate: "<center><div class='squaredThree squaredThree-blue'><input type='checkbox' class='selected-equi-all' onClick='toggleOnlyWithQR(this)' /><label for='squaredone'><span> </span></label></div></center>",
                    },
                    { field: "NumeroEquipment", width: "150px", title: "@CadEquipRES.Num" },
                    { field: "NomEquipement", title: "@CadEquipRES.Nom" }
                ]
            });
        };

/*        template: "<input type='checkbox' name='selected-equi' class='selected-equi' data-eqid='#: EquipementId #' />",
                        headerTemplate: "<input type='checkbox' onClick='toggleOnlyWithQR(this)' class='selected-equi-all' />"
 */

        temp.unbind("refresh");
        temp.bind("refresh", evt);

        temp.refresh({ url: url })
            .center()
            .open()
            ;
    }


    $(document).on('click', '#btnPrintSelected', function () {
        var selectedNo = [];

        $('.selected-equi').each(function () {
            if (this.checked == true) {
                selectedNo.push($(this).data('eqid'));
            }
        });

        var selectedOption;
        $('[name="RadioType"]').each(function () {
            if (this.checked == true) {
                selectedOption = $(this).val();
            }
        });

        var selectedOri;
        $('[name="QRPageOrientation"]').each(function () {
            if (this.checked == true) {
                selectedOri = $(this).val();
            }
        });

        if (selectedNo.length == 0) {
            alert("@Html.Raw(CadEquipRES.MissingOptions)");
            return;
        }

        if (selectedOption == undefined) {
            alert("@Html.Raw(CadEquipRES.MissingEquipments)");
            return;
        }

        if (selectedOri == undefined) {
            alert("@Html.Raw(CadEquipRES.MissingOrientation)");
            return;
        }

        var url = "@Url.Action("PrintQR", "FicheCadenassage", new { @id = Model.ClientId })" + '?opt=' + selectedOption + '&ori=' + selectedOri + '&equ=' + selectedNo.toString();

        window.open(url, '_blank').focus();
    });

    function toggleOnlyWithQR(source) {
        $('.selected-equi').each(function () {
            $(this).prop('checked', source.checked)
        });
    }



    $(document).on('click', '.selected-equi', function () { $('.selected-equi-all').prop('checked', false); });

    $('#btnAddEquip').click(function () {
        $("#listEquipement").find("a.d-none.k-grid-add").click();
    });


    $(document).on('click', '#btnPrintSelectedClose', function () {
        $("#EqWithQR").data("kendoWindow").close();
    });


    $(document).ready(GridResize);
    $(window).resize(GridResize);

    $("#Equip").click(GridResize);

    function GridResize() {
        var windowHeight = $(window).height();
        var gridHeight = $('.k-grid-height').find('.k-grid-content').height();

        var newHeight = windowHeight - 400;
        newHeight = 300 > newHeight ? 300 : newHeight;


        console.log('windowHeight', windowHeight, 'k-grid-content', gridHeight, 'new height', newHeight);

        $('.k-grid-height').find('.k-grid-content').attr('style', 'height:' + newHeight + 'px !important;');
    }
</script>
