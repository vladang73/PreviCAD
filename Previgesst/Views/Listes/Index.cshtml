@using Previgesst.Ressources

@model ViewSimpleListViewModel
@{
    ViewBag.Title = "Analyses";
    Layout = "~/Views/Shared/_Layout_v2.cshtml";
}

@section styles{
    <link href="~/Content/kendo/2016.2.714/kendo.common-bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2016.2.714/kendo.bootstrap.min.css" rel="stylesheet" />

    <link href="~/Content/kendo/2016.2.714/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2016.2.714/kendo.dataviz.bootstrap.min.css" rel="stylesheet" />

    <link href="~/Content/v2/grid-override.css" rel="stylesheet" />
    <link href="~/Content/v2/buttons.css" rel="stylesheet" />
}



@section sidebar{

    <ul class="nav flex-column sidebar-nav" role="tablist">
        <li class="nav-item text-center mt-2">
            <a class="nav-link home-navlink" role="tab" data-toggle="tab" href='@Url.Action("Index", "MesApplications")'>
                <img src="/content/v2/images/icon-home.png" /><p class="nav-link-text">@LayoutRES.Accueil</p>
            </a>
        </li>

        <li class="nav-item text-center active">
            <a class="nav-link home-navlink" role="tab" data-toggle="tab" data-bs-toggle="tab" href="#Fiches" id="Fich">
                <img src="/content/v2/images/Procédures.svg">
                <p class="nav-link-text">@Model.Type</p>
            </a>
        </li>
    </ul>
}





<main class="main-container-wrapper page-container">
    <div class="breadcrumbs-nav-wrapper">
        <ul class="breadcrumbs">
            <li><a href='@Url.Action("Index", "AdminPrevi")'>@LayoutRES.Accueil</a></li>
            <li class="active">@Html.Raw(Model.NomListe)</li>
        </ul>
    </div>

    <div class="main-page-content">

        <div class="table-top-header">
            <div class="page-title d-flex justify-content-center align-items-center">
                <h3>@ListesRES.Edition @Html.Raw(Model.NomListe)</h3>
            </div>
            <div class="page-table-meta">
                <div class="add-icon">
                    <a id="btnAddList">
                        <img src="/content/v2/images/plus-icon.svg" />
                    </a>
                </div>
            </div>
        </div>


        <span id="spanType" class="hidden d-none"> @Model.Type</span>

        @Html.AntiForgeryToken()

        @(Html.Kendo().Grid<SimpleListViewModel>()
                    .Name("list")
                    .Columns(columns =>
                    {
                        columns.Bound(e => e.Id).Hidden();
                        columns.Bound(c => c.Description)//.EditorTemplateName("MyView")
                            .Filterable(f => f.Extra(false).Operators(operators => operators
                            .ForString(str => str.Clear()
                            .Contains(GridRES.Contains)
                            .StartsWith(GridRES.StartsWith)
                            .IsEqualTo(GridRES.Egale)
                            .IsNotEqualTo(GridRES.NotEquals)
                        )))
                        .HtmlAttributes(new { @class = "td-round-left-border" })
                        ;


                        columns.Bound(c => c.DescriptionEN)//.EditorTemplateName("MyView")
                            .Filterable(f => f.Extra(false).Operators(operators => operators
                            .ForString(str => str.Clear()
                            .Contains(GridRES.Contains)
                            .StartsWith(GridRES.StartsWith)
                            .IsEqualTo(GridRES.Egale)
                            .IsNotEqualTo(GridRES.NotEquals)
                        )));

                        columns.Command(c =>
                        {
                            c.Edit().Text(" ").HtmlAttributes(new { @class = "btn-table btn-editicon" });
                            c.Custom(" ")
                                .Click("ConfirmDeleteRow")
                                .HtmlAttributes(new { @class = "k-grid-effacer btn-del" });
                        })
                        .Width("150px");
                    })
                    .Sortable(s => s.AllowUnsort(false))
                    .Pageable(s => s.PageSizes(true).PageSizes(new List<int> { 5, 10 }).Input(true).Info(false).Numeric(false))
                    .Filterable()
                    .DataSource(ds => ds
                        .Ajax()
                        .PageSize(10).Sort(x => x.Add(c => c.Description))

                    .Model(m =>
                    {
                        m.Id(e => e.Id);
                        m.Field(e => e.Description);
                        m.Field(e => e.Suppressible).DefaultValue(true);
                    })
                    .Read(r => r.Action("GetListRead", "Listes", new { iditem = Model.Type }))
                    .Create(c => c.Action("Save", "Listes", new { iditem = Model.Type }))
                    .Update(u => u.Action("Save", "Listes", new { iditem = Model.Type }))
                    .Destroy(d => d.Action("Delete", "Listes", new { iditem = Model.Type }))
                    .Events(e => e.Error("ListeErreur"))
                )
                .Events(e => e.DataBound("ListeDataBound").Edit("OnEditLises"))
                .Editable(e => e
                    .Mode(GridEditMode.InLine)
                    .CreateAt(GridInsertRowPosition.Top)
                    .DisplayDeleteConfirmation(false)
                )
                .ToolBar(t =>
                {
                    t.Create().HtmlAttributes(new { @class = "d-none ListGlobal" });
                })
        )
    </div>
</main>


<script type="text/javascript">

    var titre = $("#spanType").html();

    //$("a.k-grid-add").removeClass("k-button  k-button-icontext");
    //$("a.k-grid-add").addClass("btn btn-success ListGlobal");
    //$("span.k-add").removeClass("k-icon");
    //$("a.ListGlobal").text("Ajouter");



    function ConfirmDeleteRow(e) {
        e.preventDefault();

        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var dataItem = this.dataItem(row);

        ShowDeleteConfirm(dataItem.Description, function (args) {
            if (args.confirmed === true) {
                grid.removeRow(row);
            }
        });
    }



    function ListeErreur(args) {
        var selecteurGrid = "#list";
        if (args.errors) {
            var grid = $(selecteurGrid).data("kendoGrid");
            var validationTemplate = kendo.template($("#gridValidationMessageTemplate").html());
            grid.one("dataBinding", function (e) {
                e.preventDefault();

                $.each(args.errors, function (propertyName) {
                    var errorList = validationTemplate({ field: propertyName, messages: this.errors });
                    ShowNotification("@GridRES.NotificationTitle", errorList, "errorListTemplate");
                });
            });
        } else if (args.xhr) {
            ShowGridError("@GridRES.NotificationTitle", selecteurGrid, args);
        }
    }

    function ListeDataBound(e) {
        //var selecteurGrid = "#list";
        //var grid = $(selecteurGrid).data("kendoGrid");


        ////Selects all delete buttons
        //$(selecteurGrid + " tbody tr .k-grid-effacer").each(function () {
        //    var currentDataItem = grid.dataItem($(this).closest("tr"));

        //    //Check in the current dataItem if the row is deletable
        //    if (!currentDataItem.Suppressible) {

        //        $(this).remove();
        //    }
        //})
    }

    function OnEditLises(e) {
        console.log('OnEditLises');
        $(e.container).find('.k-grid-update').removeClass('btn-editicon').addClass('btn-mettre m-1');
        $(e.container).find('.k-grid-cancel').removeClass('btn-editicon').addClass('btn-Annuler m-1');


        //$('.k-grid-update').removeClass('btn-editicon').addClass('btn-mettre m-1');
        //$('.k-grid-cancel').removeClass('btn-edediticonit').addClass('btn-Annuler m-1');
    }

    $('#btnAddList').click(function () {
        $("#list").find("a.d-none.k-grid-add").click();
    });

</script>
