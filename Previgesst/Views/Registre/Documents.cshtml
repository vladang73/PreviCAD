@model Previgesst.ViewModels.EmployeRegistreViewModel
@using Previgesst.Ressources
@using Previgesst.Ressources.Previcad

<style>

    .k-grid-content {
        overflow-x: scroll !important;
    }
</style>

<div class="panel panel-danger">

    <div class="panel-heading back-panel-light" style="font-size:larger;font-weight:500;color:white"></div>
    <div class="panel-body">

        <div id="Documents" class="tab-pane">

            @Html.AntiForgeryToken()

            @(Html.Kendo().Grid<DocumentClientViewModel>()
                                .Name("liste-doc")
                                .Columns(columns =>
                                {

                                    columns.Bound(e => e.DocumentClientId).Hidden();
                                    columns.Bound(c => c.ApplicationPreviId).Hidden();
                                    columns.Bound(c => c.ClientId).Hidden();
                                    columns.Bound(c => c.Titre).Filterable(f => f.Extra(false).Operators(operators => operators
                        .ForString(str => str.Clear()
                        .Contains(GridRES.Contains)
                        .StartsWith(GridRES.StartsWith)
                        .IsEqualTo(GridRES.Egale)
                        .IsNotEqualTo(GridRES.NotEquals)
                           ))).Hidden();


                                    columns.Bound(c => c.Titre)
                                         .Filterable(f => f.Extra(false).Operators(operators => operators
                                      .ForString(str => str.Clear()
                         .Contains(GridRES.Contains)
                        .StartsWith(GridRES.StartsWith)
                        .IsEqualTo(GridRES.Egale)
                        .IsNotEqualTo(GridRES.NotEquals)
                                         ))).Width(200);

                                    columns.Bound(c => c.FileName).EditorTemplateName("UploadEditor").Encoded(false).Sortable(false).Filterable(false);

                                    columns.Bound(e => e.Bidon).EditorTemplateName("Vide").ClientTemplate("<a href='#=BasePath#' class='btn downloadButton' style='float:left' title="+ PrevDocRES.Telecharger + "></a>").Title("").Filterable(false).Sortable(false).Width(120);
                                })

                                .Sortable(s => s.AllowUnsort(false))
                                .Scrollable(e => e.Enabled(true))
                                .Pageable(s => s.PageSizes(true).PageSizes(new List<int> { 5, 10, 20, 50 }).Input(true).Info(false).Numeric(false))
                                .Filterable()
                                .DataSource(ds => ds
                                    .Ajax()
                                    //.Sort( x=> x.Add (c => c.DisplaySection))
                                    //.Sort(x => x.Add(c => c.Ordre))
                                    //.Group(g => g.Add(c => c.DisplaySection))
                                    .PageSize(20)
                                    .Model(m =>
                                    {
                                        m.Id(e => e.DocumentClientId);
                                        m.Field(e => e.Bidon).Editable(true);

                                    })

                                .Read(r => r.Action("ReadListDocClientCadenassage", "Registre", new { id = Model.ClientId }))
                                
  
                            )

                         
                           
            )


        </div>
    </div>
</div>


   



          


            



           
