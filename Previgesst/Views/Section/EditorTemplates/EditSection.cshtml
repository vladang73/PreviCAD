@model SectionViewModel

<div class="p-3">

    <div class="row">
        <div class="col-md-11">
            @Html.HiddenFor(model => model.SectionId)

            <div class="form-group">
                @Html.LabelFor(model => model.ApplicationPreviId, new { @class = "control-label" })

                @(Html.Kendo().DropDownListFor(m => m.ApplicationPreviId)
                                    .DataValueField("ApplicationPreviId")
                                    .DataTextField("Nom")
                                    .BindTo((System.Collections.IEnumerable)ViewData["Applications"])
                                    .HtmlAttributes(new { data_value_primitive = "true" })
                        )
                @Html.ValidationMessageFor(model => model.ApplicationName)
            </div>

            <div class="form-group mt-3">
                @Html.LabelFor(model => model.Nom, new { @class = "control-label pull-left" })


                @Html.TextBoxFor(model => model.Nom, new { @class = "form-control petit", @style = "width:90%" })
                @Html.ValidationMessageFor(model => model.Nom)

            </div>

            <div class="form-group mt-3">


                @Html.LabelFor(m => m.Ordre, new { @class = "control-label pull-left" })
                @(Html.Kendo().NumericTextBoxFor(m => m.Ordre)
                            .HtmlAttributes(new { @class = "form-control", @style = "width:100%" })
                            .Min(0)
                            .Decimals(0)
                            .Format("N0")
                        )
                @Html.ValidationMessageFor(model => model.Ordre)
            </div>



        </div>
    </div>
</div>


<script>
    jQuery(document).ready(function () {
        "use strict";

        jQuery('.k-grid-update').removeClass('btn-editicon').addClass('btn-mettre m-1');
        jQuery('.k-grid-cancel').removeClass('btn-editicon').addClass('btn-Annuler m-1');
    });
</script>


