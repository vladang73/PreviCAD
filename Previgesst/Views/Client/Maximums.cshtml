@model ClientEditDetailsViewModel

<div class="table-top-header">
    <div class="page-title d-flex justify-content-center align-items-center">
        <h3 class="m-0">Maximums</h3>
    </div>
</div>



@using (Html.BeginForm("SaveMaximums", "Client", FormMethod.Post))
{

    <div class="row">

        <div class="col-md-5">

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.ClientId)

            <hr />
            <h4><strong>INFO</strong></h4>
            <hr />

            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbAdminUtilisateurs, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NbAdminUtilisateurs, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NbAdminUtilisateurs, "", new { @class = "text-danger" })
            </div>
            <hr />

            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbAdminsPrevicadMax, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NbAdminsPrevicadMax, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NbAdminsPrevicadMax, "", new { @class = "text-danger" })

            </div>

            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbAuditeursMax, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NbAuditeursMax, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NbAuditeursMax, "", new { @class = "text-danger" })

            </div>

            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbUtilisateursPrevicad, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NbUtilisateursPrevicad, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NbUtilisateursPrevicad, "", new { @class = "text-danger" })

            </div>
            <hr />
            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbAdminsAnalyseRisqueMax, new { @class = "form-label d-block" })

                @Html.TextBoxFor(m => m.NbAdminsAnalyseRisqueMax, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NbAdminsAnalyseRisqueMax, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="offset-1 col-md-5">

            @*// TOTAL CADENASSAGE SHEETS*@
            <hr />
            <h4><strong>CADENASSAGE - ACCÈS</strong></h4>
            <hr />

            @if (Model.TotalCadenassage == null)
            {
                @Html.HiddenFor(m => m.TotalCadenassage)
            }
            else
            {
                <div class="form-group mt-3">
                    @Html.LabelFor(m => m.TotalCadenassage, new { @class = "form-label d-block" })
                    @Html.TextBoxFor(m => m.TotalCadenassage, new { @class = "form-control", @readonly = "readonly" })
                </div>
            }

            @*// USER STATUS FOR THE ANALYSIS*@
            <div class="form-group mt-3">
                @Html.LabelFor(m => m.StatusCadenassage, new { @class = "form-label d-block" })
                <p>
                    <strong>0</strong> = Non | <strong>1</strong> = Oui <!--<strong>2</strong> = Illimité </p>-->
                    @Html.TextBoxFor(m => m.StatusCadenassage, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.StatusCadenassage, "", new { @class = "text-danger" })
            </div>

            @*// LIMIT SHEETS*@
            <div class="form-group mt-3">
                @Html.LabelFor(m => m.NbLimitCadenassage, new { @class = "form-label d-block" })
                @Html.TextBoxFor(m => m.NbLimitCadenassage, new { @class = "form-control" })
            </div>

            @*// TRIAL PERIOD*@
            <div class="form-group mt-3">
                @*@Html.LabelFor(m => m.PeriodeEssai, new { @class = "form-label d-block" })
                    @Html.CheckBoxFor(m => m.PeriodeEssai, new { @class = "form-label d-block" })*@


                <div class="squaredThree squaredThree-blue d-inline-block">
                    <input type="checkbox" id="PeriodeEssai" name="PeriodeEssai" @(Model.PeriodeEssai ? "checked" : "") value="@Convert.ToString(Model.PeriodeEssai).ToLower()" />
                    <label for="squaredone"><span>@Html.DisplayNameFor(x => x.PeriodeEssai) </span></label>
                </div>

                @Html.ValidationMessageFor(m => m.PeriodeEssai, "", new { @class = "text-danger" })
            </div>

            @*// DEADLINE*@
            @if (Model.DateCadenassage == null)
            {
                @Html.HiddenFor(m => m.DateCadenassage)
            }
            else
            {
                <div class="form-group mt-3">

                    @Html.LabelFor(m => m.DateCadenassage, new { @class = "form-label d-block" })
                    @(Html.Kendo().DatePickerFor(m => m.DateCadenassage).HtmlAttributes(new { @class = "form-control", @style = "margin-left:5px" }))
                    @*@Html.TextBoxFor(m => m.DateCadenassage, new { @class = "form-control" })*@
                </div>
            }

        </div>

        <div class="col-md-11">
            <div class="form-group mt-3">
                <input type="submit" class="btn btn-mettre m-1 float-end" value="Enregistrer" />
            </div>
        </div>
    </div>


}
