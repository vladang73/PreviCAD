@model LigneAnalyseRisqueEditViewModel
@using Previgesst.Ressources.Analyse

@*<style>
    .autocomplete {
        display: inline-block !important;
        border: 1px solid #ccc !important;
        background-color: white !important;
        min-height: 27px !important;
        box-shadow: none !important;
        width: 100% !important;
        max-width: none;
        padding-right: 6px !important;
    }
</style>*@

<div class="p-4 bg-white popup-mx-h">
    <div class="row">
        <div class="col-11">
            <p class="alert alert-info d-block">@ARLignesRES.TacheOP</p>

            <div class="row">
                <div class="col-2">
                    @Html.LabelFor(model => model.Rang, new { @class = "form-label d-block" })

                    @(Html.Kendo().NumericTextBoxFor(m => m.Rang)
                                    .HtmlAttributes(new { @class = "form-control" })
                                    .Min(0)
                                    .Decimals(1)
                                    .Format("N1")
                                    .Culture("fr-CA")
                                    .Spinners(false)
                                )
                </div>

                <div class="col-4">
                    @Html.LabelFor(model => model.Zone, new { @class = "form-label d-block" })

                    @Html.TextBoxFor(model => model.Zone, new { @class = "autocomplete form-control petit" })
                    @Html.ValidationMessageFor(model => model.Zone)
                </div>


                <div class="col-4">

                    @Html.LabelFor(model => model.Operation, new { @class = "form-label d-block" })

                    @Html.TextBoxFor(model => model.Operation, new { @class = "autocomplete form-control petit" })
                    @Html.ValidationMessageFor(model => model.Operation)
                </div>
            </div>
        </div>
    </div>

    <hr />

    <div class="row mt-3">
        <div class="col-5">
            <p class="alert alert-danger d-block">@ARLignesRES.EvalSansProtection</p>

            <div class="row">

                <div class="col-12">
                    @Html.LabelFor(model => model.PhenomeneId, new { @class = "form-label d-block" })
                    @(Html.Kendo().DropDownListFor(m => m.PhenomeneId)
                                .DataValueField("PhenomeneId")
                                .DataTextField("Description")
                                .BindTo((System.Collections.IEnumerable)ViewData["Phenomenes"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.PhenomeneId)
                </div>

                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.SituationId, new { @class = "form-label d-block" })

                    @(Html.Kendo().DropDownListFor(m => m.SituationId)
                                .DataValueField("SituationId")
                                .DataTextField("Description")
                                .BindTo((System.Collections.IEnumerable)ViewData["Situations"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.SituationId)
                </div>

                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.EvenementId, new { @class = "form-label d-block" })
                    @(Html.Kendo().DropDownListFor(m => m.EvenementId)
                                .DataValueField("EvenementId")
                                .DataTextField("Description")
                                .BindTo((System.Collections.IEnumerable)ViewData["Evenements"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.EvenementId)
                </div>

                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.DommagePossibleId, new { @class = "form-label d-block" })
                    @(Html.Kendo().DropDownListFor(m => m.DommagePossibleId)
                                .DataValueField("EvenementId")
                                .DataTextField("Description")
                                .BindTo((System.Collections.IEnumerable)ViewData["Dommages"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.DommagePossibleId)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.GraviteAvantId, new { @class = "form-label d-block" })
                    @(Html.Kendo().DropDownListFor(m => m.GraviteAvantId)
                                .DataValueField("GraviteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Gravites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.GraviteAvantId)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.FrequenceAvantId, new { @class = "form-label d-block" })
                    @(Html.Kendo().DropDownListFor(m => m.FrequenceAvantId)
                                .DataValueField("FrequenceId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Frequences"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.FrequenceAvantId)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.ProbabiliteAvantId, new { @class = "form-label d-block" })

                    @(Html.Kendo().DropDownListFor(m => m.ProbabiliteAvantId)
                                .DataValueField("ProbabiliteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Probabilites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.ProbabiliteAvantId)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.PossibiliteAvantId, new { @class = "form-label d-block" })

                    @(Html.Kendo().DropDownListFor(m => m.PossibiliteAvantId)
                                .DataValueField("PossibiliteId")
                                .DataValueField("PossibiliteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Possibilites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                    @Html.ValidationMessageFor(model => model.PossibiliteAvantId)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.IndiceFinalAvant, new { @class = "form-label d-block" })

                    @Html.TextBoxFor(model => model.IndiceFinalAvantTEXTE, new { @class = "form-control petit", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.IndiceFinalAvant)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.NbPersonnesExposees, new { @class = "form-label d-block" })

                    @Html.TextBoxFor(model => model.NbPersonnesExposees, new { @type = "number", @class = "form-control petit" })
                    @Html.ValidationMessageFor(model => model.NbPersonnesExposees)
                </div>
                <div class="col-12 mt-3">
                    @Html.LabelFor(model => model.SystemeCommandeAvant, new { @class = "form-label d-block" })

                    @Html.TextBoxFor(model => model.SystemeCommandeAvant, new { @class = "form-control petit" })
                    @Html.ValidationMessageFor(model => model.SystemeCommandeAvant)
                </div>
            </div>
        </div>


        <div class="offset-1 col-5">
            <p class="alert alert-success d-block">@ARLignesRES.MesuresReduction</p>

            <div class="col-12">
                @Html.LabelFor(model => model.ReglesEtNormes, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.ReglesEtNormes, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.ReglesEtNormes)
            </div>
            <div class="col-12 mt-3">

                @Html.LabelFor(model => model.MesurePrevention, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.MesurePrevention, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.MesurePrevention)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.GraviteApresId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.GraviteApresId)
                                .DataValueField("GraviteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Gravites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                @Html.ValidationMessageFor(model => model.GraviteApresId)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.FrequenceApresId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.FrequenceApresId)
                                .DataValueField("FrequenceId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Frequences"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                @Html.ValidationMessageFor(model => model.FrequenceApresId)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.ProbabiliteApresId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.ProbabiliteApresId)
                                .DataValueField("ProbabiliteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Probabilites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                @Html.ValidationMessageFor(model => model.ProbabiliteApresId)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.PossibiliteApresId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.PossibiliteApresId)
                                .DataValueField("PossibiliteId")
                                .DataValueField("PossibiliteId")
                                .DataTextField("No")
                                .Template("<div class=\"drop-down-list-item\" title=\"#=Explication#\">#=No#</div>")
                                .BindTo((System.Collections.IEnumerable)ViewData["Possibilites"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                @Html.ValidationMessageFor(model => model.PossibiliteApresId)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.IndiceFinalApres, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.IndiceFinalApresTEXTE, new { @class = "form-control petit", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.IndiceFinalApres)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.SystemeCommandeInstalles, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.SystemeCommandeInstalles, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.SystemeCommandeInstalles)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.ConformiteAuNormes, new { @class = "control-label" })

                @Html.CheckBoxFor(m => m.ConformiteAuNormes)
                @Html.ValidationMessageFor(model => model.ConformiteAuNormes)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.PlanAction, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.PlanAction, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.PlanAction)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.ResponsableAnalyse, new { @class = "form-label d-block" })

                @Html.TextBoxFor(model => model.ResponsableAnalyse, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.ResponsableAnalyse)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.DateDeRealisation, new { @class = "form-label d-block" })

                @(Html.Kendo().DateTimePickerFor(model => model.DateDeRealisation).HtmlAttributes(new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.DateDeRealisation)
            </div>
            <div class="col-12 mt-3">
                @Html.LabelFor(model => model.EtatId, new { @class = "form-label d-block" })

                @(Html.Kendo().DropDownListFor(m => m.EtatId)
                                .DataValueField("EtatId")
                                .DataTextField("Description")
                                .BindTo((System.Collections.IEnumerable)ViewData["Etat"])
                                .HtmlAttributes(new { data_value_primitive = "true" })
                            )
                @Html.ValidationMessageFor(model => model.EtatId)
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(m => m.IdLigneAnalyseRisqueEditor)


<script type="text/javascript">
    $(document).ready(() => {

        $('.k-grid-update').removeClass('btn-edit').addClass('btn-mettre m-1');
        $('.k-grid-cancel').removeClass('btn-edit').addClass('btn-Annuler m-1');


        $(".drop-down-list-item").each(() => {
            $(this).kendoTooltip();
        });

        var liste;
        var dataInput = {
            id: $('#Id').val()
        };

        $.ajax({
            data: JSON.stringify(dataInput),
            url: '@Url.Action("GetNewValue")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (result) {

                if ($('#IdLigneAnalyseRisqueEditor').val() == 0) {
                    var numericBox = $("#Rang").data("kendoNumericTextBox");
                    numericBox.value(result);

                    var z = $('.k-popup-edit-form');
                    var gview = $("#list").data("kendoGrid");
                    var item = $("#list").find("[data-uid='" + z.attr('data-uid') + "']");
                    var selectedItem = gview.dataItem(item);
                    selectedItem.Rang = result;
                    selectedItem.dirty = true;
                }
            },
            error: function (data) {

            }
        });

        $.ajax({
            data: JSON.stringify(dataInput),
            url: '@Url.Action("RetourneZones")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                liste = JSON.parse(result);
                $("#Zone").kendoAutoComplete({
                    dataSource: liste
                });
            },
            error: function (data) {

            }
        });

        @*$.ajax({
            data: JSON.stringify(dataInput),
            url: '@Url.Action("RetourneReferences")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                liste = JSON.parse(result);
                $("#NoReference").kendoAutoComplete({
                    dataSource: liste
                });
            },
            error: function (data) {

            }
        });*@

        $.ajax({
            data: JSON.stringify(dataInput),
            url: '@Url.Action("RetourneOperations")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                liste = JSON.parse(result);
                $("#Operation").kendoAutoComplete({
                    dataSource: liste
                });
            },
            error: function (data) {

            }
        });
    }
);
</script>
