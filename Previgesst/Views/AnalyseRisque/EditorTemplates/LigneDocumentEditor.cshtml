@model DocumentViewModel

<div class="p-3">

    <div class="row">
        <div class="col-11">
            @Html.HiddenFor(model => model.DocumentId)


            <div class="form-group">
                @Html.LabelFor(model => model.SectionId, new { @class = "form-label" })

                @(Html.Kendo().DropDownListFor(m => m.SectionId)
                                    .DataValueField("SectionId")
                                    .DataTextField("Description")
                                    .BindTo((System.Collections.IEnumerable)ViewData["Sections"])
                                    .HtmlAttributes(new { data_value_primitive = "true" })
                        )
                @Html.ValidationMessageFor(model => model.SectionId)
            </div>

            <div class="form-group mt-3">


                @Html.LabelFor(model => model.Titre, new { @class = "form-label" })


                @Html.TextBoxFor(model => model.Titre, new { @class = "form-control petit" })
                @Html.ValidationMessageFor(model => model.Titre)

            </div>

            <div class="form-group mt-3">


                @Html.LabelFor(m => m.Ordre, new { @class = "form-label" })
                @(Html.Kendo().NumericTextBoxFor(m => m.Ordre)
                    .HtmlAttributes(new { @class = "form-control" })
                    .Min(0)
                    .Decimals(0)
                    .Format("N0")

                        )
                @Html.ValidationMessageFor(model => model.Ordre)
            </div>

            <div class="form-group mt-3 btn-image-upload-only">

                @Html.LabelFor(model => model.FileName, new { @class = "form-label" })


                @(Html.Kendo().Upload()
                .Name("file")
                .HtmlAttributes(new { @class = "form-control" })
                                    .Multiple(false)
                                    .Async(a => a
                                        .Save("SaveLink", "Documents")
                                        .AutoUpload(true)
                                    )
                                    .Events(
                                    e => e.Success("fileSuccess").Upload("fileUpload").Select("fileSelect")
                                    ))
                @Html.ValidationMessageFor(model => model.Ordre)


            </div>

        </div>
    </div>
</div>
